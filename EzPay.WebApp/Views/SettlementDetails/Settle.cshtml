@model EzPay.WebApp.Models.LoginViewModel

@{
	ViewData["Title"] = "Welcome";
}

<div class="container">
	<div class="col-sm-6 col-sm-offset-3">
		<table class="table table-striped table-hover">
			@{ var BillsDetail = Model.Bills.FirstOrDefault(); }
			<thead>
				<tr>
					<th>@Html.DisplayNameFor(model => BillsDetail.DueDate)</th>
					<th>@Html.DisplayNameFor(model => BillsDetail.Description)</th>
					<th>@Html.DisplayNameFor(model => BillsDetail.Amount)</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.Bills)
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.DueDate)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Description)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Amount)
							<i class="fa fa-eur" aria-hidden="true"></i>
						</td>
					</tr>

				}
			</tbody>
		</table>
	</div>
</div>

@{var TotalAmount = Model.Bills.Sum(c => c.Amount);}

<center><h2>Total amount @TotalAmount</h2></center>

<form asp-controller="SettlementDetails" asp-action="SubmitSettlement" method="post">
	@for (int i = 0; i < Model.Bills.Count(); i++)
	{
		<input asp-for="@Model.BillsList[i].CitizenId" type="hidden" />
		<input asp-for="@Model.BillsList[i].Id" type="hidden" />
		<input asp-for="@Model.BillsList[i].DueDate" type="hidden" />
		<input asp-for="@Model.BillsList[i].Description" type="hidden" />
		<input asp-for="@Model.BillsList[i].Amount" type="hidden" />
	}

	<center>
		<div class="container">
			<div class="dropdown">
				Downpayment:
				<select asp-for="@Model.SettlementTypeSelected" onchange="DownpaymentChange(value,59)">
					<option value="0">Choose downpayment</option>
					@foreach (var type in Model.SettlementTypes)
					{
						<option value=@type.Id>@(Decimal.Round(((type.Downpayment * TotalAmount) / (decimal)100.00), 2)) </option>
						<option value=@(Decimal.Round(((type.Downpayment * TotalAmount) / (decimal)100.00), 2)) type="hidden" id="downpayment"/>
						
					}
				</select>
			</div>
		</div>
	


	<script>
		function DownpaymentChange(value,maxinst) {
			//var type = 'Model.SettlementTypes.Where(c => c.Id == value)';
			//var maxInst = type.MaxInstallments.toString();

			var newmax = 56;

			document.getElementById("rangeInstInput").max = maxinst;
			document.getElementById("rangeInstInput").min = "3";
			document.getElementById("rangeInst").value = "0";
			document.getElementById("rangeInstInput").value = "0";

		}

		function InstallmentChange(value, TotalAmount)
		{

			if (document.getElementById("rangeInstInput").value != "0")
			{
				
				var N = document.getElementById("rangeInstInput").value;
				alert(N);
				alert(TotalAmount);

				var downpayment = document.getElementById("downpayment").value;
				alert(downpayment);

			/*	var TypeInfo = Model.SettlementTypes.Where(c => c.Id == item.TypeId).FirstOrDefault();
				var TotalAmount = TotalAmount;
				var DownpaymentAmount = (TypeInfo.Downpayment * TotalAmount) / 100.00;

				var P = TotalAmount - DownpaymentAmount;
				var N = document.getElementById("rangeInstInput").value;

				var R = TypeInfo.Interest / (12.00 * 100.00);

				var MonthlyAmount = (P * R * (math.Pow((1 + R), N))) /
						((math.Pow((1 + R), N) - 1));

				var MonthlyAmount = 10.00;
				var DownpaymentAmount = 13.55;
				document.getElementById("Total").innerHTML =
					"You have chosen to pay" + TotalAmount + " in " + N + " installments of " +
				MonthlyAmount + ", providing " + DownpaymentAmount+" as downpayment";
			*/
			}
		}
		</script>


			<div class="container">
				<div class="row">
					<div class="col-sm-6 col-sm-offset-3">
						<h2>Installments</h2>
						<div class="range">
							<input asp-for="@Model.InstallmentsSelected" id="rangeInstInput" type="range" min="0" max="100" step="3" value="0" onchange="InstallmentChange(value,@TotalAmount)" oninput="rangeInst.value = value">
							<output id="rangeInst">0</output>
						</div>
					</div>
				</div>
			</div>
		
			<p id="Total"></p>

			<button class="btn btn-warning lc" type="submit">Submit</button>
</center>
</form>



