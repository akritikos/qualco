@model EzPay.WebApp.Models.LoginViewModel

@{
	ViewData["Title"] = "Welcome";
}

<div class="container">
	<div class="col-sm-6 col-sm-offset-3">
		<table class="table table-striped table-hover">
			@{ var BillsDetail = Model.Bills.FirstOrDefault(); }
			<thead>
				<tr>
					<th>@Html.DisplayNameFor(model => BillsDetail.DueDate)</th>
					<th>@Html.DisplayNameFor(model => BillsDetail.Description)</th>
					<th>@Html.DisplayNameFor(model => BillsDetail.Amount)</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.Bills)
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.DueDate)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Description)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Amount)
							<i class="fa fa-eur" aria-hidden="true"></i>
						</td>
					</tr>

				}
			</tbody>
		</table>
	</div>
</div>

@{var TotalAmount = Model.Bills.Sum(c => c.Amount);}

<form asp-controller="SettlementDetails" asp-action="SubmitSettlement" method="post">
	<div class="container">
		@for (int i = 0; i < Model.BillsList.Count(); i++)
		{
			<input asp-for="@Model.BillsList[i].CitizenId" type="hidden" />
			<input asp-for="@Model.BillsList[i].Id" type="hidden" />
			<input asp-for="@Model.BillsList[i].DueDate" type="hidden" />
			<input asp-for="@Model.BillsList[i].Description" type="hidden" />
			<input asp-for="@Model.BillsList[i].Amount" type="hidden" />
			<input asp-for="@Model.BillsList[i].IsSelected" type="hidden" />
		}
		
		<div class="form-group">
			<label for="cardno" class="sr-only">Downpayment:</label>
			<div class="col-xs-12 col-sm-3 col-sm-offset-3">
				<div class="input-group">
					<span class="input-group-addon">Choose downpayment :</span>
					<select id="SettlementType" asp-for="@Model.SettlementTypeSelected" onchange="DownpaymentChange()" class="form-control">
						<option value="0">................</option>
						@foreach (var type in Model.SettlementTypes)
						{
							var downpayment = Decimal.Round(((type.Downpayment * TotalAmount) / (decimal)100.00), 2);
							<option class="SettlementType" id="settlementtype" value="@type.Id" data-downpayment=@downpayment data-interest=@type.Interest data-maxinst=@type.MaxInstallments>@downpayment</option>

						}
					</select>
				</div>
			</div>
			<div class="col-xs-12 col-sm-3">
				<div class="input-group mtop15-mob">
					<span class="input-group-addon">Total amount:</span>
					<label class="form-control text-center">@TotalAmount</label>
					<span class="input-group-addon"><i class="fa fa-eur" aria-hidden="true"></i></span>
				</div>
			</div>
		</div>

		<div class="card">
			<div class="col-xs-12 col-sm-6 col-sm-offset-3">
				<center><h3 id="InstTitle" class="card-header">Installments</h3></center>
				<div class="card-body">
					<div class="range">
						<input asp-for="@Model.InstallmentsSelected" id="rangeInstInput" type="range" min="0" max="0" step="3" value="" onchange="InstallmentChange('@TotalAmount')" oninput="rangeInst.value = value">
						<output id="rangeInst"></output>
					</div>
				</div>				
				<div class="card-footer text-muted">
					<span id="Total" class="text-success"></span>
				</div>
			</div>
		</div>

		<div class="form-group">
			<div class="col-xs-12 col-sm-6 col-sm-offset-3">
				<button type="submit" onclick="CheckValues()" class="btn btn-warning col-xs-3 col-sm-3 lc">Settle</button>
				<a asp-controller="Citizen" asp-action="Index" class="btn btn-default col-xs-3 col-sm-3 pull-right lc">Go Back</a>
			</div>
		</div>
	</div>
</form>

<script>
	function DownpaymentChange()
	{

			var sel = document.getElementById('SettlementType');

			if (sel.selectedIndex == '0') {
				document.getElementById("rangeInstInput").max = "0";
				document.getElementById("rangeInstInput").min = "0";
				document.getElementById("InstTitle").innerText = "Installments";

			}
			else {
				var selected = sel.options[sel.selectedIndex];
				var data = selected.dataset;

				document.getElementById("rangeInstInput").max = data.maxinst;
				document.getElementById("rangeInstInput").min = "3";
				document.getElementById("InstTitle").innerText = "Installments (3-" + data.maxinst + ")";
			}

			document.getElementById("rangeInst").value = "0";
			document.getElementById("rangeInstInput").value = "0";
			document.getElementById("Total").innerHTML = "";
	}

	function InstallmentChange(TotalAmount)
	{
		var sel = document.getElementById('SettlementType');
		var selected = sel.options[sel.selectedIndex];
		var TypeInfo = selected.dataset;

		if (document.getElementById("rangeInstInput").value != "0") {
				var N = document.getElementById("rangeInstInput").value;
				var TotalAmountDecimal = parseFloat(TotalAmount.replace(',', '.')).toFixed(2);
				var DownpaymentDecimal = parseFloat(TypeInfo.downpayment.replace(',', '.')).toFixed(2)
				var InterestDecimal = parseFloat(TypeInfo.interest.replace(',', '.')).toFixed(2)
				var P = (TotalAmountDecimal - DownpaymentDecimal).toFixed(2);
				var R = InterestDecimal / (12.00 * 100.00);

				var MonthlyAmount = parseFloat(((P * R * (Math.pow((1 + R), N))) / ((Math.pow((1 + R), N) - 1)))).toFixed(2);

				document.getElementById("Total").innerHTML =
					"<h5>You have chosen to pay " + TotalAmountDecimal + "€ in " + N + " installments of " +
					MonthlyAmount + "€ , providing " + DownpaymentDecimal + "€ as downpayment</h5>";

		}
	}

	function CheckValues()
	{
			if (document.getElementById('SettlementType').selectedIndex == '0')
				alert("Please select Downpayment.");

			if (document.getElementById("rangeInstInput").value == "0")
				alert("Please select Installments.");
	}
		
</script>

@section Scripts {
	@await Html.PartialAsync("_ValidationScriptsPartial")
}
