@model EzPay.WebApp.Models.LoginViewModel

@{
	ViewData["Title"] = "Welcome";
}

<div class="container">
	<div class="row profile">
		<div class="col-md-4 col-md-offset-4">
			<div class="profile-sidebar">
				<!-- Profile Photo -->
				<div class="profile-photo">
					<img src="~/images/user.png" class="img-responsive" alt="" />
				</div>
				<!-- Profile Photo -->
				<hr />
				<!-- Profile Info -->
				<div class="profile-info">
					<div class="profile-name">
						@Model.FirstName @Model.LastName  <i class="fa fa-hashtag" aria-hidden="true"></i>&nbsp;@Model.CitizenId
					</div>
					<div class="profile-tel">
						<i class="fa fa-phone" aria-hidden="true"></i>&nbsp;@Model.PhoneNumber  <i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;@Model.Email
					</div>
					<div class="profile-county">
						<i class="fa fa-map-marker" aria-hidden="true"></i>&nbsp;@Model.Address, @Model.County
					</div>
				</div>
				<!-- Profile Info -->
				<hr />
				<!-- Profile Buttons -->
				<div class="profile-buttons">
					<a asp-controller="Citizen" asp-action="ChangePassword" class="btn btn-primary">Change Password</a>
					<button type="button" class="btn btn-default btn-sm">Change Email</button>
				</div>
				<p>@Model.StatusMessage</p>
				<!-- Profile Buttons -->
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-md-8 col-md-offset-2">
			<div class="tabbable-panel">
				<div class="tabbable-line">
					<ul class="nav nav-tabs ">
						<li class="active">
							<a href="#tab1" data-toggle="tab">
								<i class="fa fa-lg fa-pie-chart" aria-hidden="true"></i>&nbsp; Overview
							</a>
						</li>
						<li>
							<a href="#tab2" data-toggle="tab">
								<i class="fa fa-lg fa-list-alt" aria-hidden="true"></i>&nbsp; Bills
							</a>
						</li>
						<li>
							<a href="#tab3" data-toggle="tab">
								<i class="fa fa-lg fa-calculator" aria-hidden="true"></i>&nbsp; Settlements
							</a>
						</li>
					</ul>
					<div class="tab-content">
						<div class="tab-pane fade in active" id="tab1">
							
								@{	var CountBills = Model.Bills.Count();
									var CountPaidBills = Model.Bills.Where(b => b.Payment != null).Count();
									var CountSettledBills = Model.Bills.Where(b => b.SettlementId != null).Count();
									var CountSettlements = Model.Settlements.Count();
								}
							<p>You have @CountBills active Bill(s).</p>
							<p>You have paid @CountPaidBills Bill(s) today.</p>
							<p>You have @CountSettlements Settlement(s) requested, including @CountSettledBills Bill(s).</p>
						</div>
						<div class="tab-pane fade" id="tab2">
							<p>
								You can choose to pay or request a settlement for the below bills:
							</p>
							@{ var BillsDetail = Model.Bills.FirstOrDefault(); }

							<form asp-controller="SettlementDetails" asp-action="Index" asp-route-id="@Model.newSettlement" method="post">
								<table class="table table-striped">
									<thead>
										<tr>
											<th>@Html.DisplayNameFor(model => BillsDetail.DueDate)</th>
											<th>@Html.DisplayNameFor(model => BillsDetail.Description)</th>
											<th>@Html.DisplayNameFor(model => BillsDetail.Amount)</th>
											<th>Status</th>
											<th>Settle</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var item in Model.Bills)
										{
											<tr>
												<td>
													@Html.DisplayFor(modelItem => item.DueDate)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.Description)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.Amount)
												</td>
												<td>
													@if (item.SettlementId != null)
													{
														<p>Settlement Requested</p>
													}
													else if (item.Payment != null)
													{
														<p>Paid</p>
													}
													else
													{
														<a asp-action="SelectPayment" asp-route-id="@item.Id" class="btn btn-primary">Pay</a>
													}
												</td>
												<td>
													@*@{
									var state = String.Empty;
									if (item.SettlementId!=null || item.Payment != null)
									{
										state = "disabled";
									}
								}*@
													@if (item.SettlementId == null && item.Payment == null)
													{
														<center>
															<div class="checkbox">
																<label asp-for="@item.ToSettle">
																	<input asp-for="@item.ToSettle" type="checkbox"/>
																</label>
															</div>
														</center>
													}
												</td>
											</tr>
										}
									</tbody>
								</table>

								<p class="pull-right">
									<button type="submit" class="btn btn-warning lc" onclick="@{Model.newSettlement.Bills = Model.Bills.Where(b => b.ToSettle == true).ToList();}">
										Settling&nbsp;<i class="fa fa-chevron-circle-right" aria-hidden="true"></i>
									</button>
								</p>

								</form>

								@*<p class="pull-right">
		<a asp-controller="SettlementDetails" asp-action="Index" asp-route-id="@Model.newSettlement" class="btn btn-warning lc" onsubmit="@{Model.newSettlement.Bills = Model.Bills.Where(b => b.ToSettle == true).ToList();}">
			Settling&nbsp;<i class="fa fa-chevron-circle-right" aria-hidden="true"></i>
		</a>
	</p>*@
</div>

						<div class="tab-pane fade" id="tab3">
							<p>
								You have already asked for the below settlements:
							</p>
							@{ var SettlementsDetail = Model.Settlements.FirstOrDefault(); }
							<table class="table">
								<thead>
									<tr>
										<th>@Html.DisplayNameFor(model => SettlementsDetail.Date)</th>
										<th>Total Amount</th>
										<th>Downpayment</th>
										<th>@Html.DisplayNameFor(model => SettlementsDetail.Installments)</th>
										<th>Monthly Amount</th>
										<th>Action</th>
									</tr>
								</thead>
								<tbody>

									@foreach (var item in Model.Settlements)
									{
										var TypeInfo = Model.SettlementTypes.Where(c => c.Id == item.TypeId).FirstOrDefault();
										decimal TotalAmount = item.Bills.Sum(b => b.Amount);
										decimal DownpaymentAmount = Math.Round((TypeInfo.Downpayment * TotalAmount) / (decimal)100,2);

										decimal P = TotalAmount - DownpaymentAmount;
										int N = item.Installments;

										decimal R = TypeInfo.Interest / (decimal)(12 * 100);

										decimal MonthlyAmount = Math.Round((P * R * ((decimal)Math.Pow((double)(1 + R), (double)N))) / ((decimal)(Math.Pow((double)(1 + R), (double)N) - 1)),2);
										
										<tr>
											<td>
												@Html.DisplayFor(modelItem => item.Date)
											</td>
											<td>
												@TotalAmount
											</td>
											<td>
												@DownpaymentAmount
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.Installments)
											</td>
											<td>
												@MonthlyAmount
											</td>
											<td>
												<a asp-controller="SettlementDetails" asp-action="BillsInSettlement" asp-route-id="@item.Id">Show settled bills.</a>
											</td>
										</tr>

									}
								</tbody>
							</table>
							<p>
								<center>
									<a class="btn btn-info" href="#">
										Checkout
									</a>
								</center>
							</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
